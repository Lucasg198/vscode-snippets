{
	"Basic structure": 
	{
		"prefix": "cBasicStructure",
		"body": 
		[
			"#include <stdio.h>",
			"#include <stdlib.h>",
			"",
			"int main()",
			"{",
			"\t${0}",
			"\t",
			"\treturn EXIT_SUCCESS;",
			"}"
		],
		"description": "Creates a basic C structure."
	},
	"Include Macro":
	{
		"prefix": "include",
		"body": "#include <${1:headerFile}.h>",
		"description": ""
	},
	"If":
	{
		"prefix": "if",
		"body":
		[
			"if (${1:condition})",
			"{",
			"\t$0",
			"}"
		],
		"description": "Creates a If statemet."
	},
	"If Else":
	{
		"prefix": "if...else",
		"body":
		[
			"if (${1:condition})",
			"{",
			"\t$0",
			"}",
			"else",
			"{",
			"\t",
			"}"
		],
		"description": "Creates a If...Else statement."
	},
	"For Loop":
	{
		"prefix": "forLoop",
		"body": 
		[
			"for (${3:int }${1:count} = 0; ${1:count} < ${2:limit}; ${1:count}++)",
			"{",
			"\t${0}",
			"}"
		],
		"description": "Creates a For Loop."
	},
	"Do..While Loop":
	{
		"prefix": "doWhile",
		"body":
		[
			"do",
			"{",
			"\t${0}",
			"}",
			"while (${1:expression});"
		],
		"description": "Creates a Do..While Loop."
	},
	"While Loop":
	{
		"prefix": "whileLoop",
		"body":
		[
			"while (${1:expression})",
			"{",
			"\t$0",
			"}"
		],
		"description": "Creates a While Loop."
	},
	"Function":
	{
		"prefix": "function",
		"body":
		[
			"${2:functionType} ${1:functionName}(${3:functionParams})",
			"{",
			"\t${0}",
			"}"
		],
		"description": "Creates a Function."
	},
	"Printf":
	{
		"prefix": "pr",
		"body": "printf(\"${1}\");",
		"description": "Basic printf function."
	},
	"Scanf":
	{
		"prefix": "sc",
		"body": "scanf(\"${1:typeFormat}\", &${2:variable});",
		"description": "Basic scanf function."
	},
	"Structure":
	{
		"prefix": "struct",
		"body":
		[
			"struct ${1:structName}",
			"{",
			"\t$0",
			"};"
		],
		"description": "Creates Struct data type."
	},
	"Enum":
	{
		"prefix": "enum",
		"body":
		[
			"enum ${1:EnumName}",
			"{",
			"\t${2:EnumItem}",
			"};"
		],
		"description": "Creates Enum data type."
	},
	"Union":
	{
		"prefix": "union",
		"body":
		[
			"union ${1:unionName}",
			"{",
			"\t$0",
			"};"
		],
		"description": "Creates Union data type."
	}
}

